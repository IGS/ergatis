[paths]

;; location where the interface can write temporary data, such as optional
;;  persistent data structures.  subdirectories may be created.
temp_space = /usr/local/scratch

;; this is the root directory under which archived pipelines and data
;;  will be stored.  it will be created if it does not exist, but
;;  write permissions must exist.  this is only for those pipelines archived
;;  to temp space.  all other pipelines are archived/compressed in place.
pipeline_archive_root = /usr/local/scratch/ergatis/archival

;; directory from which workflows will execute.  
workflow_run_dir = /usr/local/scratch/workflow

;;Log4j property file that controls debugging
workflow_log4j = /usr/local/devel/ANNOTATION/ard/workflow.log4j.properties

;; workflow install that will be used 
;; Note that this setting only effects the execution of the top level
;; workflow.  Subflows run on grid nodes will use the workflow_root that
;; is specified in the install area used by the project (defined in Run.pm)
workflow_root = /usr/local/devel/ANNOTATION/workflow

;; global id repository is the directory containing the necessary file
;;  structure for Id::Generator to pull unique pipeline IDs.  You should
;;  take care before changing this, it could cause pipeline ID conflicts.
;; if you're setting up a install for the first time you need only to create
;;  this directory and, inside it, create an empty file named 'valid_id_repository'
;;  see the module's documentation for more information.
global_id_repository = /usr/local/devel/ANNOTATION/jorvis/global_id_repository

;; as you create a pipeline the interface creates temporary backups here.  It
;;  is only after you click 'run' or 'save' that the backup is instantiated
;;  into a project area.
pipeline_build_area = /tmp/pipelines_building

;; the location to the installed ergatis components and scripts is usually set using the
;;  ERGATIS_DIR variable in each project.config file.  there are times, though, when
;;  the interface needs to pull non-project specific info (such as documentation links
;;  clicked outside of a project area).  this setting allows you to specify which code
;;  area should be used when the scope of a project can't be resolved.
default_ergatis_dir = /usr/local/devel/ANNOTATION/ard/testing_manual

;; the project creation page has a text box allowing the user to enter the path to the
;;  project root to be created.  for many users there will be a common prefix that all
;;  project root paths will share.  this can be entered below and the form field will
;;  be pre-populated with this value.  if you leave it blank the user will be prompted
;;  to enter the full path.
default_project_root = /usr/local/annotation/

;; when a new project is created a default config file is needed.  it is displayed to
;;  the user and can then be customized.
default_project_conf = /usr/local/devel/ANNOTATION/ard/current/docs/project.config.example

[workflow_settings]

;; this is the amount of time the workflow engine will wait before doing incremental
;;  writes of the XML to disk.  by default it writes upon every state change, but since
;;  writing to disk can take a while on large files, leaving this off (0) can cause
;;  delays.  if four sequential commands finish within 2 seconds, for example, there's
;;  no reason to write the XML after each command finishes.
;;
;;  value in minutes, requires workflow version 3 or higher.  0 to turn off.
marshal_interval = 1

;; initial heap size allocated for the JVM. This is the amount of memory 
;;  allocated when the JVM starts up reserved for creating objects. As more objects are 
;;  created, the JVM increases the amount of memory up to the maximum heap specified. If 
;;  the maximum heap size is exceeded, the JVM will throw an exception and quit.
init_heap = 100m

;; maximum heap size allocated for the JVM. This is the maximum amount of memory allocated 
;;  for the for creating objects. The JVM stats out by allocating the initial heap, as 
;;  more objects are created, the JVM increases the amount of memory up to the maximum 
;;  heap specified. If the maximum heap size is exceeded, the JVM will throw an exception 
;;  and quit.
max_heap = 1024m

[display_settings]

;; the pipeline lists on the index page are cached and only updated every 
;;  N minutes.
pipeline_list_cache_time = 60

;; if the pipeline's last update/mod time is within N hours it will be included
;;  in the 'active' list on the index page.
active_pipeline_age = 24

;; allows the display of project quota information on several pages.  this
;;  current implementation is TIGR-specific.
enable_quota_lookup = 1

;; if set to 1, the interface will display which codebase is currently in
;;  use by the project when appropriate.
display_codebase = 1

;; the interface uses animations in some place, such as expanding/contracting content
;;  containers.  this really drags on some machines, and can be turned off here.
builder_animations = 0

[grid]
;; settings related to Sun Grid Engine

;; the root directory of the grid engine installation. the path to the
;;  various grid binaries and manpages depend on this location.
sge_root = /local/n1ge

;; the cell in which the job runs. SGE Supports multiple grid configurations
;;  called cells. this setting specifies which cell to work with.
sge_cell = tigr

;; the port number used for communications with the grid master host.
;;  communications can be configured to run over TCP or UDP.
sge_qmaster_port = 536

;; the port number used for communications with the grid execution daemon
;;  on the execution hosts. Like communications with the master, connections
;;  with execution daemons can occur over TCP or UDP.
sge_execd_port = 537

;; The port number used for communications with the grid execution daemon
;;  on the execution hosts. Like communications with the master, connections
;;  with execution daemons can occur over TCP or UDP.
sge_arch = lx26-x86

[quick_links]

;; the interface will parse each key=value pair here and display these links at
;;  the top of any most pages.
grid info = http://htc.tigr.org/antware/cgi-bin/sgestatus.cgi
cvs       = http://tools.tigr.org/viewcvs/viewcvs.cgi/
bugzilla  = http://bugzilla.tigr.org

[disabled_components]
;; if you want to hide any components from the interface simply put its name here
;;  and make its value equal a short explanation (may be displayed in some areas
;;  of the interface.  for example:
;;
;;  genemark = requires a paid license

[projects]

;; the interface will parse each key=value pair here to determine which
;;  project areas to show the user.  contained directly under each path
;;  should be the Workflow directory.
aa1         = /usr/local/annotation/AA1
acla1       = /usr/local/annotation/ACLA1
afu1        = /usr/local/annotation/AFU1
apx2        = /usr/local/annotation/APX2
ath100      = /usr/local/annotation/ATH100
asp         = /usr/local/annotation/ASP
asp2        = /usr/local/annotation/ASP2
bacillus    = /usr/local/annotation/BACILLUS
bba1        = /usr/local/annotation/BBA1
bma1        = /usr/local/annotation/BMA1
boomano     = /usr/local/annotation/BOOMANO
burkholderia = /usr/local/annotation/BURKHOLDERIA
chado_test2 = /usr/local/scratch/annotation/CHADO_TEST2
clostridium = /usr/local/annotation/CLOSTRIDIUM
cna1        = /usr/local/annotation/CNA1
cpa1        = /usr/local/annotation/CPA1
cpip        = /usr/local/annotation/CPIP
eha2        = /usr/local/annotation/EHA2
entamoeba   = /usr/local/annotation/ENTAMOEBA
neisseria   = /usr/local/annotation/NEISSERIA
nema2       = /usr/local/annotation/NEMA2
nfa1        = /usr/local/annotation/NFA1
osa1        = /usr/local/annotation/OSA1
osa_snp        = /usr/local/annotation/OSA_SNP
osa1r5      = /usr/local/annotation/OSA1R5
pangenome     = /usr/local/annotation/PANGENOME
pathema     = /usr/local/annotation/PATHEMA
pfa1        = /usr/local/annotation/PFA1
plantta     = /usr/local/annotation/PLANTTA
pva1        = /usr/local/annotation/PVA1
rca1        = /usr/local/annotation/RCA1
sma1        = /usr/local/annotation/SMA1
strep       = /usr/local/annotation/STREP
tsta1       = /usr/local/annotation/TSTA1
tta1        = /usr/local/annotation/TTA1
tva1        = /usr/local/annotation/TVA1
zma1        = /usr/local/annotation/ZMA1
