<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>fastortho workflow</name>
        <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
        <!--Processing-->
        <command>
            <type>RunUnixCommand</type>
            <name>write FastOrtho config file</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/fastortho_write_config</executable>
            <param>  
                <key>--output_dir</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>  
                <key>--max_eval</key>
                <value>$;MAX_E_VALUE$;</value>
            </param>
            <param>  
                <key>--min_pct_id</key>
                <value>$;MIN_PERCENT_ID$;</value>
            </param>
            <param>  
                <key>--min_pct_match</key>
                <value>$;MIN_PERCENT_MATCH$;</value>
            </param>
            <param>  
                <key>--inflation</key>
                <value>$;INFLATION$;</value>
            </param>
            <param>  
                <key>--num_cpus</key>
                <value>$;NUM_CPUS$;</value>
            </param>
            <param>  
                <key>--mixed_genomes</key>
                <value>$;MIXED_GENOMES$;</value>
            </param>
            <param>  
                <key>--input_file</key>
                <value>$;INPUT_FILE$;</value>
            </param>
            <param>  
                <key>--input_list</key>
                <value>$;INPUT_FILE_LIST$;</value>
            </param>
            <param>  
                <key>--blast_bin</key>
                <value>$;BLASTPLUS_BIN$;</value>
            </param>
            <param>  
                <key>--mcl_bin</key>
                <value>$;MCL_BIN$;</value>
            </param>
            <param>  
                <key>stderr</key>
                <value>$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.writeConfig.stderr</value>
            </param>
        </command>
        <command>
    		<type>RunUnixCommand</type>
    		<name>replace template keys</name>
    		<state>incomplete</state>
    		<executable>$;BIN_DIR$;/replace_template_keys</executable>
    		<param>
		        <key>--template_xml</key>
		        <value>$;DOCS_DIR$;/fastortho_distributed.xml</value>
		    </param>
		    <param>
		        <key>--component_conf</key>
		        <value>$;COMPONENT_CONFIG$;</value>
		    </param>
		    <param>
		        <key>--output_xml</key>
		        <value>$;WORKFLOW_REPOSITORY$;/fastortho_distributed.xml.gz</value>
		    </param>
		    <param>
		        <key>--distribopts</key>
		        <value>nodistrib=$;NODISTRIB$;</value>
		    </param>
		    <param>
		        <key>stdout</key>
		        <value>$;TMP_DIR$;/replace_template_keys.stdout</value>
		    </param>
		    <param>
		        <key>stderr</key>
		        <value>$;TMP_DIR$;/replace_template_keys.stderr</value>
		    </param>
		</command>
		<!-- using distributed-serial instead of remote-serial since that will allow it to run locally if need be (like in Docker) -->
		<commandSet type="remote-serial">
			<state>incomplete</state>
			<name>fastortho distributed</name>
			<fileName>$;WORKFLOW_REPOSITORY$;/fastortho_distributed.xml.gz</fileName>
			<dceSpec type="sge">
				<group>$;PROJECT_CODE$;</group>
				<OS>linux</OS>
			</dceSpec>
		</commandSet>
    </commandSet>
</commandSetRoot>
