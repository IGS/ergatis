<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>velvet workflow</name>
        <!--Preprocessing-->
        <command>
        	<type>RunUnixCommand</type>
        	<name>create output directory</name>
        	<state>incomplete</state>
			<executable>mkdir</executable>
			<arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
		</command>
		<command>				
			<type>RunUnixCommand</type>
			<name>create temp directory</name>
			<state>incomplete</state>
			<executable>mkdir</executable>
    	    <arg>-p -m 777 $;TMP_DIR$;</arg>
		</command>
    	<!--Processing-->
		<command>
			<type>RunDistributedCommand</type>
			<name>run Celera Assembler</name>
			<state>incomplete</state>
			<executable>$;BIN_DIR$;/runCA_wrapper</executable>
			<param>
				<key>--input_list</key>
				<value>&quot;$;INPUT_FILE_LIST$;&quot;</value>
			</param>
			<param>
				<key>--input_file</key>
				<value>&quot;$;INPUT_FILE$;&quot;</value>
			</param>
			<param>
				<key>--runca_opts</key>
				<value>&quot;-p $;OUTPUT_PREFIX$; -d $;OUTPUT_DIRECTORY$;/$;OUTPUT_PREFIX$; -s $;SPEC_FILE$;&quot;</value>
			</param>
			<param>
				<key>--runca_bin</key>
				<value>$;CELERA_ASSEMBLER_EXEC$;</value>
			</param>
			<param>
				<key>stdout</key>
				<value>$;OUTPUT_DIRECTORY$;/runCA_wrapper.stdout</value>
			</param>
			<param>
				<key>stderr</key>
				<value>$;OUTPUT_DIRECTORY$;/runCA_wrapper.stderr</value>
			</param>
		</command>
        <!--Postprocessing-->		 
        <command>
            <type>RunUnixCommand</type>
            <name>create assembly file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>              
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.asm"</value>                
            </param>
            <param>
                <key>--output_list</key>
                <value>$;ASM_OUTPUT_LIST$;</value>
            </param>
        </command>            
        <command>
            <type>RunUnixCommand</type>
            <name>create quality assessment file list</name>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.qc"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;QC_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create chimera summary list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*chimera\.summary"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;CHIMERA_SUMMARY_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create chimera report list </name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*chimera\.report"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;CHIMERA_REPORT_OUTPUT_LIST$;</value>
            </param>
        </command>  
        <command>
            <type>RunUnixCommand</type>
            <name>create merge log list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>              
            <param>
                <key>--regex</key>
                <value>".*\.mergeLog"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;MERGE_LOG_OUTPUT_LIST$;</value>
            </param>
        </command>     
        <command>
            <type>RunUnixCommand</type>
            <name>create scf fasta list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>              
            <param>
                <key>--regex</key>
                <value>".*\.scf.fasta"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;SCF_FASTA_OUTPUT_LIST$;</value>
            </param>
        </command>                				
	</commandSet>	
</commandSetRoot>				
