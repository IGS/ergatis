<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>mosaik_rna_seq workflow</name>
        <!--Processing-->
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
 
        <command>
            <type>RunUnixCommand</type>
            <name>MosaikBuild Reference</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_BUILD_EXEC$;</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/buildref.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/buildref.stderr</value>
            </param>

            <arg>-fr $;FR$; -oa $;OUTPUT_DIRECTORY$;/reference.dat</arg>
        </command>


        <command>
            <type>RunUnixCommand</type>
            <name>MosaikBuild Reads</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_BUILD_EXEC$;</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/buildread.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/buildread.stderr</value>
            </param>

            <arg>-q $;Q$; $;Q2$; -out $;OUTPUT_DIRECTORY$;/reads.dat -st $;ST$; $;MFL$;</arg>            
        </command>


        <command>
            <type>RunUnixCommand</type>
            <name>MosaikAligner</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_ALIGNER_EXEC$;</executable>
            
            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/align.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/align.stderr</value>
            </param>

            <arg>-in $;OUTPUT_DIRECTORY$;/reads.dat -out $;OUTPUT_DIRECTORY$;/aligned.dat -ia $;OUTPUT_DIRECTORY$;/reference.dat -hs $;HS$; -mm $;MM$; -m $;M$; -mhp $;MHP$; -act $;ACT$; -p $;P$; -ls $;LS$; $;OTHER_ALIGN_OPTS$;</arg>            
        </command>

        <command>
            <type>RunUnixCommand</type>
            <name>MosaikSort</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_SORT_EXEC$;</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/sort.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/sort.stderr</value>
            </param>

            <arg>-in $;OUTPUT_DIRECTORY$;/aligned.dat -out $;OUTPUT_DIRECTORY$;/aligned_sorted.dat $;OTHER_SORT_OPTS$; -iuo</arg>            
        </command>

        <command>
            <type>RunUnixCommand</type>
            <name>create assembly file output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;/ace_files</arg>
        </command>

        <command>
            <type>RunUnixCommand</type>
            <name>MosaikAssembler</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_ASSEMBLER_EXEC$;</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/assemble.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/assemble.stderr</value>
            </param>

            <arg>-in $;OUTPUT_DIRECTORY$;/aligned_sorted.dat -ia $;REFERENCE$; -f $;FORM$; -out $;OUTPUT_DIRECTORY$;/ace_files/assembled</arg>            
        </command>

        <command>
            <type>RunUnixCommand</type>
            <name>MosaikCoverage</name>
            <state>incomplete</state>
            <executable>$;MOSAIK_COVERAGE_EXEC$;</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/coverage.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/coverage.stderr</value>
            </param>

            <arg>-in $;OUTPUT_DIRECTORY$;/aligned_sorted.dat -ia $;REFERENCE$; -ngc</arg>            
        </command>

        <command>
            <type>RunUnixCommand</type>
            <name>Gene Expression Stats</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/mosaik_gene_expr_stats.pl</executable>

            <param>
            <key>stdout</key>
            <value>$;OUTPUT_DIRECTORY$;/mosaik_gene_expr_stats.stdout</value>
            </param>
            <param>
            <key>stderr</key>
            <value>$;OUTPUT_DIRECTORY$;/mosaik_gene_expr_stats.stderr</value>
            </param>

            <arg>--coverage_file=$;OUTPUT_DIRECTORY$;/coverage.stdout --assembler_file=$;OUTPUT_DIRECTORY$;/assemble.stdout --output_file=$;OUTPUT_DIRECTORY$;/$;SAMPLE$;_expression</arg>
        </command>

    </commandSet>
</commandSetRoot>
