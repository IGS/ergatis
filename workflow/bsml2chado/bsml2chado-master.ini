[empty]

[create_compute_scratch]
;make the scratch space
param.command=mkdir
arg=-p -m 777 $;TMP_DIR$;

[set_workflowdocs_permissions]
param.command=find
arg=$;WORKFLOW_REPOSITORY$; 
arg=-type f -exec chmod 666 \{\} \;

[create_compute_output]
;make the output directory
param.command=mkdir
arg=-p -m 777 $;OUTPUT_DIRECTORY$;

[set_scratch_permissions]
;give global read/write access to the scratch files
param.command=find
arg=$;TMP_DIR$;
arg=-type f -exec chmod \{\} -R 666 \;

[set_output_permissions]
;give global read/write access to the output files
param.command=find
arg=$;OUTPUT_DIRECTORY$;
arg=-type f -exec chmod \{\} -R 666 \;

[generate_directory_list]
param.command=find
arg=$;TMP_DIR$; 
arg=-type d -mindepth 1
param.stdout=$;TMP_DIR$;/directories.list

[replace_placeholders]
param.command=$;BIN_DIR$;/replace_placeholders
param.username=chado_admin
param.password=chado_admin99
param.database=$;DATABASE$;
param.outdir=$;OUTPUT_DIRECTORY$;
param.dirlist=$;TMP_DIR$;/directories.list

[load_tables]
;Load the tab delimited .out files into the database
param.command=$;BIN_DIR$;/loadSybaseChadoTables
param.username=chado_admin
param.password=chado_admin99
param.database=$;DATABASE$;
param.server=$;SERVER$;
param.bcp=in
param.batchsize=30000
param.logfile=$;WORKFLOW_REPOSITORY$;/loadSybaseChadoTables.log
param.directory=$;OUTPUT_DIRECTORY$;
param.stdout=$;WORKFLOW_REPOSITORY$;/loadSybaseChadoTables.out
param.abort=1
param.debug_level=5

[confirm_database_loaded]
; confirm whether the chado database's computational analysis module was loaded
param.command=$;BIN_DIR$;/confirm_database_loaded
param.username=$;USERNAME$;
param.password=$;PASSWORD$;
param.database=$;DATABASE$;
param.server=$;SERVER$;
;param.bsmldoc=$;BSML_FILE$;
param.outfiledir=$;OUTPUT_DIRECTORY$;
param.loadlog=$;WORKFLOW_REPOSITORY$;/loadSybaseChadoTables.log
param.log4perl=$;WORKFLOW_REPOSITORY$;/confirm_database_loaded.log
param.outdir=$;WORKFLOW_REPOSITORY$;
param.module=companalysis
param.confirm=1

[validate_out_files]
;Validate the .out files
param.command=$;BIN_DIR$;/validateOutFiles
param.directory=$;OUTPUT_DIRECTORY$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/validateOutFiles.log
param.outdir=$;WORKFLOW_REPOSITORY$;
param.validationpath=$;BIN_DIR$;

[check_database_space]
;Check database space
param.command=$;BIN_DIR$;/check_database_space
param.username=$;USERNAME$;
param.password=$;PASSWORD$;
param.database=$;DATABASE$;
param.server=$;SERVER$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/check_database_space.log

[create_iterator_list_subflow1]
param.command=$;BIN_DIR$;/generate_input_list
param.filelist='$;BSML_FILE_LIST$;'
param.file='$;BSML_FILE$;'
param.directory='$;BSML_DIRECTORY$;'
param.output=$;WORKFLOW_REPOSITORY$;/subflow1.list

[add_analysis_id]
param.command=$;BIN_DIR$;/get_analysis
param.subflow=$;WORKFLOW_REPOSITORY$;/subflow1.list
param.database=$;DATABASE$;
param.username=$;USERNAME$;
param.password=$;PASSWORD$;
param.debug_level=$;DEBUG$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/get_analysis.pl.log

[create_groups_subflow1]
param.command=$;BIN_DIR$;/generate_groups
param.output_dir=$;WORKFLOW_REPOSITORY$;
param.prefix=subflow1groups
param.groupsize=$;GROUPSIZE$;
param.file=$;WORKFLOW_REPOSITORY$;/subflow1.list

[create_iterative_subflow1]
;create iterative subflow
param.command=$;BIN_DIR$;/generate_subflow
;workflow doc information
param.template=$;WORKFLOWDOCS_DIR$;/groups-iterator_template.xml
param.inifile=$;WORKFLOWDOCS_DIR$;/groups-iterator.ini
param.iteratortemplate=$;WORKFLOWDOCS_DIR$;/batch-paralleliterator_template.xml
param.iteratorini=$;WORKFLOWDOCS_DIR$;/batch-iterator.ini
param.iteratorlist=$;WORKFLOW_REPOSITORY$;/subflow1groups.list
param.conf=$;COMPONENT_CONFIG$;
param.wfname=$;NAME$;
;output information
param.outputdir=$;WORKFLOW_REPOSITORY$;
param.outputxml=$;WORKFLOW_REPOSITORY$;/groups.xml
param.debug=$;DEBUG$;

[subflow1]
fileName = $;WORKFLOW_REPOSITORY$;/groups.xml


[cache_queries]
param.command=$;BIN_DIR$;/queries2Chado
param.database=$;DATABASE$;
param.username=$;USERNAME$;
param.password=$;PASSWORD$;
param.debug_level=$;DEBUG$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/queries2Chado.pl.log
param.cache_dir=$;TMP_DIR$;


[drop_indexes]
; Drop all indexes and constraints in the chado database to facilitate fast BCP
param.command=$;BIN_DIR$;/sql2Chado
param.--username=chado_admin
param.--password=chado_admin99
param.--database=$;DATABASE$;
param.--action=dropindexes
param.--log4perl=$;TMP_DIR$;/dropindex.log

[rebuild_indexes]
; Rebuild all indexes and constraints in the chado database once BCP has completed
param.command=$;BIN_DIR$;/sql2Chado
param.--username=chado_admin
param.--password=chado_admin99
param.--database=$;DATABASE$;
param.--action=rebuildindexes
param.--log4perl=$;TMP_DIR$;/rebuild_index.log

[revoke_public]
param.command=$;BIN_DIR$;/sql2Chado
param.--username=chado_admin
param.--password=chado_admin99
param.--database=$;DATABASE$;
param.--action=revokeallpublic
param.--log4perl=$;TMP_DIR$;/revoke_public.log

[grant_public]
param.command=$;BIN_DIR$;/sql2Chado
param.--username=chado_admin
param.--password=chado_admin99
param.--database=$;DATABASE$;
param.--action=grantallpublic
param.--log4perl=$;TMP_DIR$;/grant_public.log

[grant_cas_permissions]
param.command=$;BIN_DIR$;/sql2Chado
param.--username=chado_admin
param.--password=chado_admin99
param.--database=$;DATABASE$;
param.--action=grantallcas
param.--log4perl=$;TMP_DIR$;/grant_cas.log


