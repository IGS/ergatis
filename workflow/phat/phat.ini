;workflow for phat
[empty]

[phat]
;Execute the phat search
param.command=/usr/local/devel/ANNOTATION/EGC_utilities/PHAT/Phat/fullphat
arg=-p $;TRAINING_DIRECTORY$; -noextras -o $;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat $;OTHER_OPTS$; $;ITER_FILE_PATH$;
param.stdout=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat.raw

[phat2bsml]
;Store phat_results into BSML doc
param.command=$;BIN_DIR$;/phat2bsml
param.--input=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat.gff
param.--output=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat.bsml
param.--project=$;DATABASE$;

[store_config_params]
;store parameters associated with analysis in bsml file
;workflow will pass add'l optional parameters if invoked with LoggedUnixCommand
;--command-id
param.command=$;BIN_DIR$;/analysis2bsml
param.--conf=$;COMPONENT_CONFIG$;
param.--bsml_file=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat.bsml
param.--componenturl=$;WORKFLOW_REPOSITORY$;/pipeline.xml
param.--pipelineurl=$;REPOSITORY_ROOT$;/Workflow/pipeline/$;PIPELINEID$;/pipeline.xml.instance
param.--analysis_id=$;NAME$;_analysis

[dtd_validation]
;perform document schema validation
param.command=$;BIN_DIR$;/dtdValid.pl
param.-d=$;SCHEMA_DIR$;/bsml3_1.dtd
arg=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.phat.bsml



