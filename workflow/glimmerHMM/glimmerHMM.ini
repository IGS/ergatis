;workflow for glimmerHMM
[empty]

[glimmerHMM]
;Execute the glimmerHMM search
;param.command=/usr/local/bin/glimmerhmm
;param.command=/usr/local/devel/ANNOTATION/GlimmerHMM/bin/glimmerhmm_linux
param.command=/usr/local/devel/ANNOTATION/jorvis/glimmerHMM/glimmerhmm
arg=$;ITER_FILE_PATH$; $;TRAINING_DIRECTORY$;
param.stdout=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.glimmerHMM.raw

[glimmerHMM2bsml]
;Store glimmerHMM_results into BSML doc
param.command=$;BIN_DIR$;/glimmerHMM2bsml
param.--input=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.glimmerHMM.raw
param.--output=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.glimmerHMM.bsml
param.--fasta_file=$;ITER_FILE_PATH$;
param.--project=$;DATABASE$;

[store_config_params]
;store parameters associated with analysis in bsml file
;workflow will pass add'l optional parameters if invoked with LoggedUnixCommand
;--command-id
param.command=$;BIN_DIR$;/analysis2bsml
param.--conf=$;COMPONENT_CONFIG$;
param.--bsml_file=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.glimmerHMM.bsml
param.--componenturl=$;WORKFLOW_REPOSITORY$;/pipeline.xml
param.--pipelineurl=$;REPOSITORY_ROOT$;/Workflow/pipeline/pipeline$;PIPELINEID$;.xml

[dtd_validation]
;perform document schema validation
param.command=$;BIN_DIR$;/dtdValid.pl
param.-d=$;SCHEMA_DIR$;/bsml3_1.dtd
arg=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.glimmerHMM.bsml



