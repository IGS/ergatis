All components will have the following configuration sections.

[parameters]
[input]
[output]
[workflowdocs]
[init]

Keys may be used in the value string. The value for the key will
be replaced "in-line" upon execution of the component. The key
definition order does not affect replacement value. For example the
following syntax specifies that the $;OUTPUT_DIRECTORY$; will use the
value of $;BSML_REPOSITORY$;, $;NAME$;, and $;WFID$; in the value
string.

$;OUTPUT_DIRECTORY$; = $;BSML_REPOSITORY$;/$;NAME$;/$;WFID$;
$;BSML_REPOSITORY$; = $;REPOSITORY_ROOT$/BSML_repository
$;REPOSITORY_ROOT$; = /usr/local/annotation/CHADO_TEST
$;NAME$; = promer
$;WFID$; = 1394

$;OUTPUT_DIRECTORY$; will evaluate to
"/usr/local/annotation/CHADO_TEST/BSML_repository/promer/1394" at
runtime.

Several special keys are automatically set at runtime by the
run_pipeline script if they are not explicitly specified in the
configuration file.  These keys can still be referenced in the value
string and will be set correctly upon execution of the component.
These keys are

[workflowdocs]
$;COMPONENT_CONFIG$; - File location for the config file used for
invocation of the component.  This file will include value strings
with replaced keys.

[init] 
$;WFID$; - Unique id for the instance of the component
workflow.  
$;PIPELINEID$; - This is currently not used.  It is meant
to be a shared id for all components that are organized into a
pipeline.  Each component of the pipeline will have a unique $;WFID$;
but the same $;PIPELINEID$;.


A brief description of the configuration sections follows.

[parameters]

All runtime parameters for component steps are specified in the
[parameters] section.  An example of a runtime parameter is a search
cutoff.

[input]

All input files are specified in the [input] section.  These keys may
be used in combination to produce your input set. Most components will
have BSML input files and contain keys such as these:

$;BSML_FILE_LIST$; - A list of BSML files. One file listed per
line. Full paths only.  
$;BSML_FILE$; - Full path to a BSML file.
$;BSML_DIRECTORY$; - A directory of BSML files with a .bsml suffix.

Example values include:

$;BSML_DIRECTORY$; = $;REPOSITORY_ROOT$;/BSML_repository/
$;BSML_FILE$; = /tmp/myfile/list
$;BSML_FILE_LIST$; = $;REPOSITORY_ROOT$;/BSML_repository/myfile.bsml

[output]

All output files/directories are specified in the [output] section.
Most components will have a single output directory.

$;OUTPUT_DIRECTORY$; - Full path to output directory.  This directory
should be made unique when necessary by using the $;WFID$; key.  If
the component will require output from multiple instances, this
directory should be made unique.  

Examples values include:

$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/BSML_repository/$;NAME$;
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/BSML_repository/$;NAME$;/$;WFID$;

[workflowdocs]

This section specifies the workflow XML and INI file used to execute
the component.  This section also includes the name of the component
in the $;NAME$; key and the version key $;VERSION$;.  The $;VERSION$;
is only set if a CVS tag has been applied to the component
configuration.

[init]

This section contains shared configuration keys that are used across
all components.  This section is usually included in a component
configuration via a [include] section.

An example configuration section follows:

$;DATABASE$;=chado_test
$;REPOSITORY_ROOT$;=/usr/local/annotation/CHADO_TEST
$;TMP_DIR$;=/usr/local/scratch/$;DATABASE$;/$;NAME$;/$;WFID$;
$;BIN_DIR$;=/usr/local/devel/ANNOTATION/cas/bin
$;SCHEMA_DIR$;=/usr/local/devel/ANNOTATION/cas/docs
$;WORKFLOWDOCS_DIR$;=/usr/local/devel/ANNOTATION/cas/docs
$;DEBUG$;=0

;the following keys are replaced at runtime by the invocation script
$;WFID$;=
$;PIPELINE$;=0



