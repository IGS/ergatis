Project release tag SOP
========================

Overview
--------

1)Testing
2)CVS release tags
3)Optional branch creation for immediate fix
4)Install



Testing 
------- 

A project release should only be initiated after a successful run of
the testing suite.  The testing suite is still under development but
will include a set of saved pipelines which test the core components
of the production pipelines.


CVS release tags
----------------

Any project that has changed since the last install should receive a
new release tag in CVS.  All the release tags follow the form

 project-v1r1b1

Usually, the revision number (r) is incremented for a release,
eg. v1r1b1 --> v1r2b1.  

Alternatively, for smaller bug fixes, the build number (b) can be
incremented instead of the revision number. eg. v1r1b1 --> v1r1b2.

Releases that incorporate substantial changes should increment the
version number (v). eg. v1r1b1 --> v2r1b1.

Note, all version, release, build numbers start at 1 not zero.

The following sections provides the commands to tag releases in
Ergatis, Prism, BSML, and Chado.  The syntax is similar for all the
projects.  The './cvs_release.sh -p' command displays the last release
version of the project.  The new release can be derived from this
release tag.

****************
Ergatis releases
****************

cvs co -d ergatis_release ANNOTATION/ergatis/util/cvs_release.sh
cd ergatis_release
./cvs_release.sh -p 
./cvs_release.sh -r ?ERGATIS_TAG_NAME?

**************
Prism releases
**************

cvs co -d prism_release ANNOTATION/Prism/util/cvs_release.sh
cd prism_release
./cvs_release.sh -p 
./cvs_release.sh -r ?PRISM_TAG_NAME?

*************
BSML releases
*************

cvs co -d bsml_release ANNOTATION/bsml/util/cvs_release.sh
cd bsml_release
./cvs_release.sh -p 
./cvs_release.sh -r ?BSML_TAG_NAME?

**************
Chado releases
**************

cvs co -d chado_release ANNOTATION/chado/util/cvs_release.sh
./cvs_release.sh -p 
./cvs_release.sh -r ?CHADO_TAG_NAME?


Optional branch creation for immediate fix
------------------------------------------

Occasionally one of the components (such as ergatis) within the installed code
base will need an immediate update.  Other commits since the last release may
not have been tested yet, so we can't just cut a new release and do an install.
While it is tempting to just manually make the change directly in the install
area for the fix, this breaks our release SOP and any such manual fixes
would get lost if someone does a re-install of the currently tagged code
release.

The solution is to create a branch that contains only your immediate changes,
cut a release of that, and install.

cvs co -r ?LATEST_TAG_NAME?
cvs tag -b ?NEXT_TAG_NAME?

From this point we'll take what you chose as NEXT_TAG_NAME and refer to it
as CURRENT_TAG_NAME

cvs co -r ?CURRENT_TAG_NAME? ergatis

Then make your changes, commit, and carry on with the install directions using
this CURRENT_TAG_NAME.  Make sure you remember to modify the CHANGELOG, since
this method avoids using cvs_release.sh


Install
-------

This should be done as the sgc user.

First, choose a target area for the install and create a control file.  For
example, contents might be:


prok_prism=prism-v1r13b1
coati=prism-v1r13b1
euk_prism=prism-v1r13b1
chado_prism=prism-v1r13b1
shared_prism=prism-v1r13b1
bsml=bsml-v2r4b1
ergatis=ergatis-v1r8b1
ontologies=chado-v1r5b2
chado_schema=chado-v1r5b2
cvdata=chado-v1r5b2
peffect=HEAD
server=SYBTIGR


cvs co -d install ANNOTATION/ergatis/ergatis_installer.pl
cd install
./ergatis_installer.pl -U sgc --installdir=/usr/local/devel/ANNOTATION/ard/testing_manual --controlfile=/usr/local/devel/ANNOTATION/ard/testing_manual.ini --workingdir=/tmp/testing_manual


About
-----

This document was written plaintext and then rendered into HTML using
asciidoc.  If you make modifications, change
link:release_install_SOP.txt[release_install_SOP.txt] and then use one of these
commands to reformat: /usr/local/devel/ANNOTATION/angiuoli/code/asciidoc.py -b css release_install_SOP.txt
